name: Release and Update Homebrew

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v0.1.0

permissions:
  contents: write  # Need write permission to create releases
  
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Need write permission to create releases
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Extract version
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Build package
        run: |
          poetry build
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.extract_version.outputs.VERSION }}
          body: |
            ## Installation
            
            ```bash
            brew tap marhaasa/tools
            brew install scribe
            ```
            
            ## What's Changed
            See the [commit history](https://github.com/${{ github.repository }}/commits/v${{ steps.extract_version.outputs.VERSION }}) for changes.
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Calculate wheel SHA256
        id: calculate_sha
        run: |
          VERSION=${{ steps.extract_version.outputs.VERSION }}
          # Wait a moment for PyPI to process the upload
          sleep 30
          
          # Download the wheel from PyPI
          WHEEL_URL="https://files.pythonhosted.org/packages/py3/s/scribe/scribe-${VERSION}-py3-none-any.whl"
          
          # Retry logic for PyPI availability
          for i in {1..5}; do
            if curl -L -f -o scribe.whl "$WHEEL_URL"; then
              break
            fi
            echo "Attempt $i failed, retrying in 30 seconds..."
            sleep 30
          done
          
          SHA256=$(sha256sum scribe.whl | cut -d' ' -f1)
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT
          echo "Calculated wheel SHA256: $SHA256"

  update-homebrew:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Calculate wheel SHA256
        id: calculate_sha
        run: |
          VERSION=${{ steps.extract_version.outputs.VERSION }}
          WHEEL_URL="https://files.pythonhosted.org/packages/py3/s/scribe/scribe-${VERSION}-py3-none-any.whl"
          
          # Retry logic for PyPI availability
          for i in {1..5}; do
            if curl -L -f -o scribe.whl "$WHEEL_URL"; then
              break
            fi
            echo "Attempt $i failed, retrying in 30 seconds..."
            sleep 30
          done
          
          SHA256=$(sha256sum scribe.whl | cut -d' ' -f1)
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT
      
      - name: Checkout homebrew tap
        uses: actions/checkout@v4
        with:
          repository: marhaasa/homebrew-tools
          token: ${{ secrets.TAP_GITHUB_TOKEN }}
      
      - name: Update Formula
        run: |
          VERSION=${{ steps.extract_version.outputs.VERSION }}
          SHA256=${{ steps.calculate_sha.outputs.SHA256 }}
          
          # Create the updated formula
          cat > Formula/scribe.rb << 'EOF'
          class Scribe < Formula
            include Language::Python::Virtualenv

            desc "CLI for managing notes in Neovim + Obsidian"
            homepage "https://github.com/marhaasa/scribe"
            url "https://files.pythonhosted.org/packages/py3/s/scribe/scribe-__VERSION__-py3-none-any.whl"
            sha256 "__SHA256__"
            license "MIT"

            depends_on "python@3.12"

            def install
              virtualenv_install_with_resources
            end

            test do
              # Test version command
              assert_match "scribe version #{version}", shell_output("#{bin}/scribe version")
              
              # Test help command
              assert_match "A CLI for managing notes", shell_output("#{bin}/scribe --help")
              
              # Test that commands are available
              assert_match "daily", shell_output("#{bin}/scribe --help")
              assert_match "new", shell_output("#{bin}/scribe --help")
            end
          end
          EOF
          
          # Replace placeholders with actual values
          sed -i "s/__VERSION__/$VERSION/g" Formula/scribe.rb
          sed -i "s/__SHA256__/$SHA256/g" Formula/scribe.rb
          
          # Show the changes for debugging
          echo "Updated formula with version $VERSION and SHA256 $SHA256"
          
          # Commit and push
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/scribe.rb
          git commit -m "Update scribe to v$VERSION" || echo "No changes to commit"
          git push
